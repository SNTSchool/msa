const {
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle
} = require('discord.js');

const { isStaff } = require('../utils/isStaff');
const {
  setClaimer,
  getClaimer,
  clearClaimer,
  updateTicketUI
} = require('../utils/ticketUtils');
const { safeReply } = require('../utils/safeInteraction');



async function handleClaim(interaction, ticketId) {
  const channel = interaction.channel;
console.log(ticketId)
  if (!isStaff(interaction.member)) {
    return await safeReply(interaction, {
      content: '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå Claim',
      ephemeral: true
    });
  }

  const currentClaimer = getClaimer(channel.id);
  if (currentClaimer && currentClaimer !== interaction.user.id) {
    return await safeReply(interaction, {
      content: `‚ùå Ticket ‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å Claim ‡πÇ‡∏î‡∏¢ <@${currentClaimer}> ‡πÅ‡∏•‡πâ‡∏ß`,
      ephemeral: true
    });
  }

  // ‚úÖ ‡∏ï‡∏≠‡∏ö interaction ‡∏Å‡πà‡∏≠‡∏ô
  await safeReply(interaction, {
    content: `‚úÖ ‡∏Å‡∏≥‡∏•‡∏±‡∏á Claim ticket ‡∏ô‡∏µ‡πâ...`,
    ephemeral: true
  });

  // ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏∑‡πà‡∏ô
  try {
    setClaimer(channel.id, interaction.user.id);
    await channel.setName(`claimed-${ticketId}`);
    await channel.setTopic(`Claimed by ${interaction.user.tag}`);
    await updateTicketUI(channel, 'claimed');

    // ‚úÖ ‡∏™‡πà‡∏á followUp ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
    await interaction.followUp({
      content: `üéØ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ Claim ticket ‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`,
      ephemeral: true
    });
  } catch (err) {
    console.error('Claim error:', err);
    await interaction.followUp({
      content: `‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞ Claim ticket`,
      ephemeral: true
    });
  }
}


async function handleUnclaim(interaction, ticketId) {
  console.log(ticketId)
  const channel = interaction.channel;
  const currentClaimer = getClaimer(channel.id);

  if (currentClaimer !== interaction.user.id) {
    return await safeReply(interaction, {
      content: `‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ Claim ticket ‡∏ô‡∏µ‡πâ`,
      ephemeral: true
    });
  }

  clearClaimer(channel.id);
  await channel.setName(`ticket-${ticketId}`);
  await channel.setTopic(null);

  await updateTicketUI(channel, 'open');
  await safeReply(interaction, {
    content: `üîì ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ Unclaim ticket ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß`,
    ephemeral: true
  });
}

module.exports = {
  handleClaim,
  handleUnclaim
};
