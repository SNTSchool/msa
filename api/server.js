// api/server.js

const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
const port = process.env.PORT || 10000

// ‚úÖ Middleware
app.use(cors()); // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏ó‡∏∏‡∏Å origin (‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
app.use(bodyParser.json()); // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö JSON body
app.use(bodyParser.urlencoded({ extended: true })); // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö form data

app.get('/verify', (req, res) => {
  res.send('‚úÖ ‡∏£‡∏∞‡∏ö‡∏ö‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
});


// ‚úÖ POST /verify ‚Üí ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Roblox ‡∏´‡∏£‡∏∑‡∏≠‡∏ü‡∏≠‡∏£‡πå‡∏°
app.post('/verify', async (req, res) => {
  const { username, userId } = req.body;

  // üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (!username || !userId) {
    return res.status(400).json({ success: false, message: 'Missing username or userId' });
  }

  // ‚úÖ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö (‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Google Sheets/database ‡πÑ‡∏î‡πâ)
  console.log(`‚úÖ Verification received: ${username} (${userId})`);

  // üîÅ ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó request
  const isJson = req.headers['content-type']?.includes('application/json');

  if (isJson) {
    return res.json({ success: true, message: 'Verified via API' });
  } else {
    return res.send(`
      <html>
        <head><title>Verified</title></head>
        <body>
          <h2>‚úÖ Verification Successful</h2>
          <p>Username: <strong>${username}</strong></p>
          <p>User ID: <strong>${userId}</strong></p>
          <a href="/verify">Back</a>
        </body>
      </html>
    `);
  }
});

// ‚úÖ fallback ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö route ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ
app.use((req, res) => {
  res.status(404).send('‚ùå Route not found');
});


