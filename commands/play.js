const { SlashCommandBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('play')
    .setDescription('‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
    .addStringOption(option =>
      option.setName('url')
        .setDescription('‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ï‡∏£‡∏á‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á (.mp3, .ogg, .wav)')
        .setRequired(true)
    ),

  async execute(interaction, client) {
    const url = interaction.options.getString('url');
    const member = interaction.member;
    const voiceChannel = member.voice.channel;

    if (!voiceChannel) {
      return interaction.reply({ content: '‚ùå ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö', ephemeral: true });
    }

    try {
      await interaction.deferReply();

      if (!client.distube) {
        return interaction.editReply('‚ùå Bot ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á');
      }

      await client.distube.play(voiceChannel, url, {
        member: member,
        textChannel: interaction.channel
      });

      await interaction.editReply(`üé∂ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô: \`${url}\``);
    } catch (err) {
      console.error(err);
      await interaction.editReply('‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á');
    }
  },
};
