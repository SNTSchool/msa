const { SlashCommandBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('play')
    .setDescription('‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á')
    .addStringOption(option =>
      option.setName('url')
        .setDescription('‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ï‡∏£‡∏á‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á (.mp3, .ogg, .wav)')
        .setRequired(true)
    ),

 async execute(interaction, client) {
  try {
    // defer ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á (‡∏ñ‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤)
    if (!interaction.deferred && !interaction.replied) {
      await interaction.deferReply();
    }

    // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á
    await client.distube.play(interaction.member.voice.channel, '‡πÄ‡∏û‡∏•‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á', {
      member: interaction.member,
      textChannel: interaction.channel
    });

    // editReply ‡πÅ‡∏ó‡∏ô reply
    await interaction.editReply('üé∂ ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!');

  } catch (err) {
    console.error(err);

    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡πà‡∏≠‡∏ô reply/followUp
    if (interaction.deferred || interaction.replied) {
      await interaction.followUp({ content: '‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á', ephemeral: true });
    } else {
      await interaction.reply({ content: '‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á', ephemeral: true });
    }
  }
}
};
