const { SlashCommandBuilder } = require('discord.js');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('play')
    .setDescription('‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏´‡∏£‡∏∑‡∏≠ Spotify public track')
    .addStringOption(option =>
      option.setName('query')
        .setDescription('‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏û‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠ Spotify track')
        .setRequired(true)
    ),

  async execute(interaction, client) {
    const query = interaction.options.getString('query');
    const member = interaction.member;
    const voiceChannel = member.voice.channel;

    if (!voiceChannel) {
      return interaction.reply({ content: '‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô', ephemeral: true });
    }

    try {
      // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô interaction ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
      if (!interaction.deferred && !interaction.replied) {
        await interaction.deferReply();
      }

      if (!client.distube) {
        return interaction.editReply('‚ùå Bot ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á');
      }

      // ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å URL ‡∏ï‡∏£‡∏á‡∏´‡∏£‡∏∑‡∏≠ Spotify public
      await client.distube.play(voiceChannel, query, {
        member: member,
        textChannel: interaction.channel
      });

      await interaction.editReply(`üé∂ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô: \`${query}\``);

    } catch (err) {
      console.error(err);

      // reply/followUp ‡πÅ‡∏ö‡∏ö‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
      if (interaction.deferred || interaction.replied) {
        await interaction.followUp({ content: '‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á', ephemeral: true });
      } else {
        await interaction.reply({ content: '‚ùå ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á', ephemeral: true });
      }
    }
  },
};
